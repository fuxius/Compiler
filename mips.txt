.data
str0: .asciiz " "
str1: .asciiz "
"
str2: .asciiz "Result: "
str3: .asciiz "
"
.text
main:
	main_b0:
		
		#%t0 = alloca i32
		addiu $s3, $sp, -4
		
		#%t1 = call i32 @func1(i32 1, i32 2, i32 3, i32 4)
		sw $t7, -8($sp)
		sw $s3, -12($sp)
		sw $a1, -16($sp)
		sw $a2, -20($sp)
		sw $a3, -24($sp)
		sw $ra, -28($sp)
		li $a1, 1
		li $a2, 2
		li $a3, 3
		li $k0, 4
		sw $k0, -44($sp)
		addiu $sp, $sp, -28
		jal func1
		lw $ra, -28($sp)
		addiu $sp, $sp, 28
		lw $t7, -8($sp)
		lw $s3, -12($sp)
		lw $a1, -16($sp)
		lw $a2, -20($sp)
		lw $a3, -24($sp)
		addiu $t7, $v0, 0
		
		#store i32 %t1, i32* %t0
		sw $t7, 0($s3)
		
		#%t2 = load i32, i32* %t0
		lw $s3, 0($s3)
		
		#call void @putstr(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str2, i64 0, i64 0))
		la $a0, str2
		li $v0, 4
		syscall
		
		#call void @putint(i32 %t2)
		addiu $a0, $s3, 0
		li $v0, 1
		syscall
		
		#call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str3, i64 0, i64 0))
		la $a0, str3
		li $v0, 4
		syscall
		
		#ret i32 0
		li $v0, 10
		syscall
func0:
	func0_b0:
		
		#%t0 = alloca i32
		addiu $s3, $sp, -12
		
		#store i32 %a0, i32* %t0
		sw $a1, 0($s3)
		
		#%t1 = alloca i32
		addiu $t7, $sp, -16
		
		#store i32 %a1, i32* %t1
		sw $a2, 0($t7)
		
		#%t2 = load i32, i32* %t0
		lw $s3, 0($s3)
		
		#%t3 = load i32, i32* %t1
		lw $t7, 0($t7)
		
		#call void @putint(i32 %t2)
		addiu $a0, $s3, 0
		li $v0, 1
		syscall
		
		#call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str0, i64 0, i64 0))
		la $a0, str0
		li $v0, 4
		syscall
		
		#call void @putint(i32 %t3)
		addiu $a0, $t7, 0
		li $v0, 1
		syscall
		
		#call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str1, i64 0, i64 0))
		la $a0, str1
		li $v0, 4
		syscall
		
		#ret void
		jr $ra
func1:
	func1_b0:
		
		#%t0 = alloca i32
		addiu $s3, $sp, -20
		
		#store i32 %a0, i32* %t0
		sw $a1, 0($s3)
		
		#%t1 = alloca i32
		addiu $t7, $sp, -24
		
		#store i32 %a1, i32* %t1
		sw $a2, 0($t7)
		
		#%t2 = alloca i32
		addiu $t6, $sp, -28
		
		#store i32 %a2, i32* %t2
		sw $a3, 0($t6)
		
		#%t3 = alloca i32
		addiu $s7, $sp, -32
		
		#store i32 %a3, i32* %t3
		lw $k1, -16($sp)
		sw $k1, 0($s7)
		
		#%t4 = load i32, i32* %t0
		lw $s3, 0($s3)
		
		#%t5 = load i32, i32* %t1
		lw $t7, 0($t7)
		
		#call void @func0(i32 %t4, i32 %t5)
		sw $a1, -36($sp)
		sw $a2, -40($sp)
		sw $a3, -44($sp)
		sw $t6, -48($sp)
		sw $t7, -52($sp)
		sw $s3, -56($sp)
		sw $s7, -60($sp)
		sw $ra, -64($sp)
		move $a1, $s3
		move $a2, $t7
		addiu $sp, $sp, -64
		jal func0
		lw $ra, -64($sp)
		addiu $sp, $sp, 64
		lw $a1, -36($sp)
		lw $a2, -40($sp)
		lw $a3, -44($sp)
		lw $t6, -48($sp)
		lw $t7, -52($sp)
		lw $s3, -56($sp)
		lw $s7, -60($sp)
		
		#%t7 = load i32, i32* %t2
		lw $s3, 0($t6)
		
		#%t8 = load i32, i32* %t3
		lw $t7, 0($s7)
		
		#%t9 = add nsw i32 %t7, %t8
		addu $s3, $s3, $t7
		
		#ret i32 %t9
		addiu $v0, $s3, 0
		jr $ra
